<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>RoboDock</title>
    <description>船塢日誌</description>
    <link>http://robodock.github.io//</link>
    <atom:link href="http://robodock.github.io//feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 25 Oct 2016 12:48:28 +0800</pubDate>
    <lastBuildDate>Tue, 25 Oct 2016 12:48:28 +0800</lastBuildDate>
    <generator>Jekyll v3.1.6</generator>
    
      <item>
        <title>influxDB 使用 HTTP API 寫入資料</title>
        <description>&lt;h1 id=&quot;http-api--influxdb&quot;&gt;使用 HTTP API 寫入資料到 influxDB&lt;/h1&gt;

&lt;h2 id=&quot;http-api-&quot;&gt;使用 HTTP API 建立資料庫&lt;/h2&gt;
&lt;p&gt;透過傳送一個 HTTP &lt;code class=&quot;highlighter-rouge&quot;&gt;POST&lt;/code&gt; 請求至 &lt;code class=&quot;highlighter-rouge&quot;&gt;/query&lt;/code&gt; 網頁端點並設定參數 &lt;code class=&quot;highlighter-rouge&quot;&gt;q=CREATE DATABASE &amp;lt;new_database_name&amp;gt;&lt;/code&gt;，可建立資料庫：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -i -XPOST http://localhost:8086/query --data-urlencode &quot;q=CREATE DATABASE mydb&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;http-api--1&quot;&gt;使用 HTTP API 寫入資料&lt;/h2&gt;
&lt;p&gt;透過傳送一個 HTTP &lt;code class=&quot;highlighter-rouge&quot;&gt;POST&lt;/code&gt; 請求至 &lt;code class=&quot;highlighter-rouge&quot;&gt;/write&lt;/code&gt; 網頁端點並指定相關參數，可將資料寫入 influxDB 資料庫。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -i -XPOST &#39;http://localhost:8086/write?db=mydb&#39; --data-binary &#39;cpu_load_short,host=server01,region=us-west value=0.64 1434055562000000000&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;上述命令會將一筆資料寫入名為 &lt;code class=&quot;highlighter-rouge&quot;&gt;mydb&lt;/code&gt; (透過指定 &lt;code class=&quot;highlighter-rouge&quot;&gt;db=mydb&lt;/code&gt;) 的資料庫，資料如下：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;measurement : &lt;code class=&quot;highlighter-rouge&quot;&gt;cpu_load_short&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;tag keys : &lt;code class=&quot;highlighter-rouge&quot;&gt;host=server01,region=us-west&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;fidle key : &lt;code class=&quot;highlighter-rouge&quot;&gt;value=0.64&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;timestamp : &lt;code class=&quot;highlighter-rouge&quot;&gt;1434055562000000000&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;section&quot;&gt;資料格式&lt;/h2&gt;

&lt;p&gt;上述的資料型式即為典型的 influxDB 資料格式，influxDB 稱這為 &lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Line Protocol&lt;/code&gt;&lt;/strong&gt; ，說明如下：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;measurement : 記錄項目&lt;/li&gt;
  &lt;li&gt;tags : 選項欄位，用來標記不同資料來源或地點，有利於查詢效率。tag keys 與 tag values 皆為 &lt;strong&gt;字串&lt;/strong&gt; 格式。&lt;/li&gt;
  &lt;li&gt;fields : 資料數值欄位。field keys 為 &lt;strong&gt;字串&lt;/strong&gt; 格式，而 field value &lt;strong&gt;預設格式&lt;/strong&gt; 則為 &lt;strong&gt;float(浮點小數)&lt;/strong&gt;。&lt;/li&gt;
  &lt;li&gt;timestamp : epoch 格式，但以 nanosecond 單位記錄(所以總位數為19位數)。在 influxDB 中，所有時間皆以 UTC 記錄。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;section-1&quot;&gt;寫入多點資料&lt;/h3&gt;
&lt;p&gt;多筆資料只要以 &lt;strong&gt;new line &lt;code class=&quot;highlighter-rouge&quot;&gt;\n&lt;/code&gt;&lt;/strong&gt; 字元分隔，即可在一個 HTTP 請求中，寫入多筆資料到資料庫中，效率也會比分開多次 HTTP 請求來的好。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;註：僅能使用 new line 字元 &lt;code class=&quot;highlighter-rouge&quot;&gt;\n&lt;/code&gt;，不可使用 new line + carriage return &lt;code class=&quot;highlighter-rouge&quot;&gt;\n\r&lt;/code&gt; 作為分隔。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;例如：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -i -XPOST &#39;http://localhost:8086/write?db=mydb&#39; --data-binary &#39;cpu_load_short,host=server02 value=0.67
cpu_load_short,host=server02,region=us-west value=0.55 1422568543702900257
cpu_load_short,direction=in,host=server01,region=us-west value=2.0 1422568543702900257&#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-2&quot;&gt;讀取檔案來寫入&lt;/h3&gt;
&lt;p&gt;透過傳遞 &lt;code class=&quot;highlighter-rouge&quot;&gt;@filename&lt;/code&gt; 參數給 &lt;code class=&quot;highlighter-rouge&quot;&gt;curl&lt;/code&gt;，可將整個檔案資料寫入資料庫，當然檔案內容格式必須遵循前述的 &lt;code class=&quot;highlighter-rouge&quot;&gt;Line Protocol&lt;/code&gt;，注意換行符號僅使用 &lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\n&lt;/code&gt;&lt;/strong&gt;，而非 windows 環境下使用的 &lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\n\r&lt;/code&gt;&lt;/strong&gt; 換行字元，在 windows 環境中編輯資料檔案時須特別注意，建議使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;notepad++&lt;/code&gt; 之類的文書軟體來處理資料檔案。&lt;/p&gt;

&lt;p&gt;例如：名為 &lt;code class=&quot;highlighter-rouge&quot;&gt;cpu_data.txt&lt;/code&gt; 的檔案中資料如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cpu_load_short,host=server02 value=0.67
cpu_load_short,host=server02,region=us-west value=0.55 1422568543702900257
cpu_load_short,direction=in,host=server01,region=us-west value=2.0 1422568543702900257
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;將 &lt;code class=&quot;highlighter-rouge&quot;&gt;cpu_data.txt&lt;/code&gt; 檔案寫入 &lt;code class=&quot;highlighter-rouge&quot;&gt;mydb&lt;/code&gt; 資料庫 :&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -i -XPOST &#39;http://localhost:8086/write?db=mydb&#39; --data-binary @cpu_data.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;註：建議單一個檔案的資料少於 5000 點，以避免 HTTP request times out 相關問題。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;schemaless-design&quot;&gt;Schemaless Design&lt;/h2&gt;
&lt;p&gt;influxDB 是一種 Schemaless 資料庫，資料庫不需要固定樣式的資料表，可隨時加入額外的 measuremen、tag、field。
但對於已使用中的欄位，則須維持相通的資料格式，不可變更。例如原本使用 &lt;strong&gt;integers&lt;/strong&gt; 的欄位，則無法改寫入 &lt;strong&gt;string&lt;/strong&gt; 格式資料。&lt;/p&gt;

&lt;h2 id=&quot;http-&quot;&gt;關於 HTTP 回應訊息&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;2xx : &lt;code class=&quot;highlighter-rouge&quot;&gt;HTTP 204 No Content&lt;/code&gt; 與 &lt;code class=&quot;highlighter-rouge&quot;&gt;HTTP 200 OK&lt;/code&gt; 皆代表處理成功。&lt;/li&gt;
  &lt;li&gt;4xx : influxDB 無法處理請求&lt;/li&gt;
  &lt;li&gt;5xx : 系統超載或受損&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 15 Oct 2016 19:57:00 +0800</pubDate>
        <link>http://robodock.github.io//2016/10/15/influxdb-http-api-write-data.html</link>
        <guid isPermaLink="true">http://robodock.github.io//2016/10/15/influxdb-http-api-write-data.html</guid>
        
        
      </item>
    
      <item>
        <title>influxDB 備份與回復</title>
        <description>&lt;h1 id=&quot;influxdb-&quot;&gt;influxDB 備份與回復&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;influxDB 具備對某個時間點實施&lt;strong&gt;“快照”&lt;/strong&gt;與回存的能力。&lt;/li&gt;
  &lt;li&gt;influxDB 的備份接為完全備份，目前尚不支援&lt;strong&gt;“增量備份”&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;有兩種資料型式需要備份&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;metastore&lt;/strong&gt; : 資料庫的系統資訊，一次備份整個系統資訊。&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;metrics&lt;/strong&gt; : 資料內容，依各個資料庫分別備份。&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;註：開源版的 OSS influxDB 與 企業版的 InfluxEnterprise 資料庫備份無法互通使用&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;metastore-&quot;&gt;Metastore 備份&lt;/h2&gt;

&lt;p&gt;influxDB metastore 包含系統狀態、使用者資訊、資料庫、標記資料等等資訊。當節點執行時，可執行底下命令進行備份：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;influxd backup &amp;lt;path-to-backup&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;命令未加入任何參數時，備份目前狀態&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ influxd backup /tmp/backup
2016/02/01 17:15:03 backing up metastore to /tmp/backup/meta.00
2016/02/01 17:15:03 backup complete
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;database-&quot;&gt;Database 備份&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;每個資料需要分開單獨備份&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;加入 &lt;code class=&quot;highlighter-rouge&quot;&gt;-database&lt;/code&gt; 參數來備份資料庫：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;influxd backup -database &amp;lt;mydatabase&amp;gt; &amp;lt;path-to-backup&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;其他參數選項：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-retention &amp;lt;retention policy name&amp;gt;&lt;/code&gt; : 使用特定的資料庫保留策略來進行備份&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-shard &amp;lt;shard ID&amp;gt;&lt;/code&gt; : 使用特定的 shard ID 進行備份&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-since &amp;lt;data&amp;gt;&lt;/code&gt; : 指定備份特定的時間起的資料，時間戳記需使用 RFC3339 格式，(例如 &lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;2015-12-24T08:12:23Z&lt;/code&gt;&lt;/strong&gt;)，使用指定時間的方式可間接達成增量備份的目的。&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;註：Database 的備份中同時也會包含 Metastore 資料備份&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;範例：針對名為 &lt;code class=&quot;highlighter-rouge&quot;&gt;telegraf&lt;/code&gt; 的資料庫，使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;autogen&lt;/code&gt; 策略，從 2016/2/1 起進行&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ influxd backup -database telegraf -retention autogen -since 2016-02-01T00:00:00Z /tmp/backup
2016/02/01 18:02:36 backing up rp=default since 2016-02-01 00:00:00 +0000 UTC
2016/02/01 18:02:36 backing up metastore to /tmp/backup/meta.01
2016/02/01 18:02:36 backing up db=telegraf rp=default shard=2 to /tmp/backup/telegraf.default.00002.01 since 2016-02-01 00:00:00 +0000 UTC
2016/02/01 18:02:36 backup complete
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section&quot;&gt;遠端備份&lt;/h2&gt;
&lt;p&gt;使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;-host&lt;/code&gt; 參數，指定遠端主機位址與埠號，可對遠端主機進行備份：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ influxd backup -database mydatabase -host 10.0.0.1:8088 /tmp/mysnapshot
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;section-1&quot;&gt;資料庫回復&lt;/h2&gt;

&lt;p&gt;使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;influxd restore&lt;/code&gt; 命令來復原資料庫。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;註：只有在資料庫 daemon 停止執行時，才能進行資料庫回復動作。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;復原資料庫時，須指定備份型式，資料庫位置與備份檔所在位置：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;influxd restore [ -metadir | -datadir ] &amp;lt;path-to-meta-or-data-directory&amp;gt; &amp;lt;path-to-backup&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-metadir &amp;lt;path-to-meta-directory&amp;gt;&lt;/code&gt; 如果使用來自系統套件安裝方式，資料庫 metastore 位置應該在 &lt;code class=&quot;highlighter-rouge&quot;&gt;/var/lib/influxdb/meta&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-datadir &amp;lt;path-to-data-directory&amp;gt;&lt;/code&gt; 如果使用來自系統套件安裝方式，資料庫 metastore 位置應該在 &lt;code class=&quot;highlighter-rouge&quot;&gt;/var/lib/influxdb/data&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;其他回復資料庫參數：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-database &amp;lt;database&amp;gt;&lt;/code&gt; 指定要回復的資料庫名稱，如果回復的資料型式為 data(亦即指定 &lt;code class=&quot;highlighter-rouge&quot;&gt;-datadir&lt;/code&gt;參數後)，此項參數為必要項目。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-retention &amp;lt;retention policy&amp;gt;&lt;/code&gt; 指定特定的保留策略。&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-shard &amp;lt;shard id&amp;gt;&lt;/code&gt; 指定回復特定的 shard data，須配合 &lt;code class=&quot;highlighter-rouge&quot;&gt;-database&lt;/code&gt; 與 &lt;code class=&quot;highlighter-rouge&quot;&gt;-retention&lt;/code&gt; 參數使用。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;資料庫回復範例：&lt;/p&gt;

&lt;p&gt;首先必須復原 metastore 資料，influxDB 才知道有哪些資料庫存在。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ influxd restore -metadir /var/lib/influxdb/meta /tmp/backup
Using metastore snapshot: /tmp/backup/meta.00
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;metastore 資料復原後，再進行資料部分復原，以前述的 &lt;code class=&quot;highlighter-rouge&quot;&gt;telegraf&lt;/code&gt; 資料庫例子：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ influxd restore -database telegraf -datadir /var/lib/influxdb/data /tmp/backup                                                                         
Restoring from backup /tmp/backup/telegraf.*
unpacking /var/lib/influxdb/data/telegraf/default/2/000000004-000000003.tsm
unpacking /var/lib/influxdb/data/telegraf/default/2/000000005-000000001.tsm
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;當資料庫復原後，shards 上的權限可能不正確，可使用下列命令，確保檔案權限正確：&lt;/p&gt;

  &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ sudo chown -R influxdb:influxdb /var/lib/influxdb&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;資料庫復原動作完成後，重新啟動資料庫&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ service influxdb start
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;可簡單快速執行資料庫查詢命令 &lt;code class=&quot;highlighter-rouge&quot;&gt;show database&lt;/code&gt;，確定資料庫回復成功：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;influx -execute &#39;show databases&#39;
name: databases
---------------
name
_internal
telegraf
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Sat, 15 Oct 2016 19:48:00 +0800</pubDate>
        <link>http://robodock.github.io//2016/10/15/influxdb-backup.html</link>
        <guid isPermaLink="true">http://robodock.github.io//2016/10/15/influxdb-backup.html</guid>
        
        
      </item>
    
      <item>
        <title>Grafana 安裝程序</title>
        <description>&lt;h1 id=&quot;grafana&quot;&gt;透過套件管理程式安裝 Grafana&lt;/h1&gt;

&lt;h2 id=&quot;centos&quot;&gt;CentOS&lt;/h2&gt;
&lt;p&gt;直接安裝最新穩定版&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo yum install https://grafanarel.s3.amazonaws.com/builds/grafana-3.1.1-1470047149.x86_64.rpm
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;或者將 grafana 加入套件庫清單，
建立 &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/yum.repos.d/grafana.repo&lt;/code&gt; 檔案，爾後便可使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;$sudo yum install grafana&lt;/code&gt; 命令直接安裝，內容如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[grafana]
name=grafana
baseurl=https://packagecloud.io/grafana/stable/el/6/$basearch
repo_gpgcheck=1
enabled=1
gpgcheck=1
gpgkey=https://packagecloud.io/gpg.key https://grafanarel.s3.amazonaws.com/RPM-GPG-KEY-grafana
sslverify=1
sslcacert=/etc/pki/tls/certs/ca-bundle.crt
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section&quot;&gt;套件安裝細節說明如下：&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;執行檔安裝於 &lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/sbin/grafana-server&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;建立起動程序檔 &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/inint.d/grafana-server&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;安裝預設環境變數檔 &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/sysconfig/grafana-server&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;建立預設組態設定檔 &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/grafana/grafana.ini&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;安裝 systemd 服務(若系統使用systemd) &lt;code class=&quot;highlighter-rouge&quot;&gt;grafana-server.service&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;預設記錄檔路徑為 &lt;code class=&quot;highlighter-rouge&quot;&gt;/var/log/grafana/grafana.log&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;預設 grafana 使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;sqlite3&lt;/code&gt; 資料庫，檔案位置在 &lt;code class=&quot;highlighter-rouge&quot;&gt;/var/lib/grafana/grafana.db&lt;/code&gt;，當要升級 grafana 版本時記得先備份此檔案。 Grafana 亦支援使用 MySQL 或 Postgres 作為資料庫。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-1&quot;&gt;啟動方式：&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;inid.d service&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo service grafana-server start

設定開機自動執行

$ sudo /sbin/chkconfig --add grafana-server
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;systemd&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ systemctl daemon-reload
$ systemctl start grafana-server
$ systemctl status grafana-server

設定開機自動執行

$ sudo systemctl enable grafana-server.service
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;不管是使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;init.d&lt;/code&gt; 或是 &lt;code class=&quot;highlighter-rouge&quot;&gt;systemd&lt;/code&gt; 方式啟動，皆會讀取 &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/default/grafana-server&lt;/code&gt; 設定環境變數。&lt;/p&gt;

&lt;p&gt;系統會以名為 &lt;code class=&quot;highlighter-rouge&quot;&gt;grafana&lt;/code&gt; 的使用者來啟動 &lt;code class=&quot;highlighter-rouge&quot;&gt;grafana-server&lt;/code&gt; 程序，網頁介面預設使用 HTTP port &lt;code class=&quot;highlighter-rouge&quot;&gt;3000&lt;/code&gt;，預設使用者為 &lt;code class=&quot;highlighter-rouge&quot;&gt;admin&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;在 CentOS 7 中，開啟防火牆&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ firewall-cmd --permanent --add-port=3000/tcp
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;另外還有 SELinux 的問題，無法連線時先檢查&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sestatus          # 查看 selinux 狀態
$ setenforce 0      # 暫時使用 permissive 模式
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;debianubuntu&quot;&gt;Debian/Ubuntu&lt;/h2&gt;
&lt;p&gt;直接安裝最新穩定版&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ wget https://grafanarel.s3.amazonaws.com/builds/grafana-3.1.1-1470047149_amd64.deb
$ sudo apt-get install -y adduser libfontconfig
$ sudo dpkg -i grafana_3.1.1-1470047149_amd64.deb
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;或者將 grafana 加入套件庫清單，
建立 &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/apt/sources.list&lt;/code&gt; 檔案，內容如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;deb https://packagecloud.io/grafana/stable/debian/ wheezy main

如果想使用開發版本:
deb https://packagecloud.io/grafana/testing/debian/ wheezy main

加入 Package Cloud key，允許安裝已簽署套件
$ curl https://packagecloud.io/gpg.key | sudo apt-key add -

使用下列命令安裝:
$ sudo apt-get update
$ sudo apt-get install grafana

版本較舊的 Debian/Ubuntu 可能需要加裝這個套件才能透過 HTTPS 取得套件：
$ sudo apt-get install -y apt-transport-https
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;section-2&quot;&gt;套件安裝細節說明如下：&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;執行檔安裝於 &lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/sbin/grafana-server&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;建立起動程序檔 &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/inint.d/grafana-server&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;安裝預設環境變數檔 &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/default/grafana-server&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;建立預設組態設定檔 &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/grafana/grafana.ini&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;安裝 systemd 服務(若系統使用systemd) &lt;code class=&quot;highlighter-rouge&quot;&gt;grafana-server.service&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;預設記錄檔路徑為 &lt;code class=&quot;highlighter-rouge&quot;&gt;/var/log/grafana/grafana.log&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;預設 grafana 使用 sqlite3 資料庫，檔案位置在 &lt;code class=&quot;highlighter-rouge&quot;&gt;/var/lib/grafana/grafana.db&lt;/code&gt;，當要升級 grafana 版本時記得先備份此檔案。 Grafana 亦支援使用 MySQL 或 Postgres 作為資料庫。&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;section-3&quot;&gt;啟動方式：&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;inid.d service&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo service grafana-server start

設定開機自動執行

$ sudo update-rc.d grafana-server defaults 95 10
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;systemd&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ systemctl daemon-reload
$ systemctl start grafana-server
$ systemctl status grafana-server

設定開機自動執行

$ sudo systemctl enable grafana-server.service
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Sat, 15 Oct 2016 19:29:00 +0800</pubDate>
        <link>http://robodock.github.io//2016/10/15/grafana-installation.html</link>
        <guid isPermaLink="true">http://robodock.github.io//2016/10/15/grafana-installation.html</guid>
        
        
      </item>
    
      <item>
        <title>Raspberry Pi (Beaglebone) 使用 VNC 遠端桌面</title>
        <description>&lt;h2 id=&quot;raspberry-pi--beaglebone--vnc&quot;&gt;Raspberry Pi / BeagleBone 安裝 VNC&lt;/h2&gt;

&lt;p&gt;在 Windows 系統上安裝 VNC server，可讓遠端使用者連線到目前電腦操作者的桌面，進行遠端操作，然而在 Linux 世界中，圖形桌面系統是多人多工的，如果你在套件庫中尋找 &lt;code class=&quot;highlighter-rouge&quot;&gt;vncserver&lt;/code&gt; 套件來安裝，結果可能與您預期的不太一樣。建立遠端連線後，得到卻是一個全新的可登入桌面環境，而不是操作中的螢幕畫面。&lt;/p&gt;

&lt;p&gt;那有沒有辦法連線至操作中的 Linux 桌面環境螢幕畫面呢? 這就要靠 &lt;strong&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;x11VNC&lt;/code&gt;&lt;/strong&gt; 套件來達成了。&lt;/p&gt;

&lt;h2 id=&quot;x11vnc&quot;&gt;x11vnc&lt;/h2&gt;

&lt;p&gt;安裝方式(以 Raspbian/jessie 系統為例):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo apt-get install x11vnc
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;如果需要建立 vnc 連線密碼，可使用 &lt;code class=&quot;highlighter-rouge&quot;&gt;storepasswd&lt;/code&gt; 參數，依照指示輸入密碼:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ x11vnc -storepasswd
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;會產生一個預設路徑存放於 &lt;code class=&quot;highlighter-rouge&quot;&gt;.vnc/passwd&lt;/code&gt; 的加密文字檔。&lt;/p&gt;

&lt;p&gt;簡單執行 &lt;code class=&quot;highlighter-rouge&quot;&gt;x11vnc&lt;/code&gt; 即可啟動，常用設定如下：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ x11vnc -usepw  	//使用 .vnc/passwd 作為連線密碼

$ x11vnc -nopw       //不要使用密碼

$ x11vnc -bg         //在背景執行，但當遠端連線結束後亦會結束服務。
$ x11vnc -bg -forever //在背景執行，但會持續執行等候連線。

$ x11vnc -display :0    //指定要連線至 :0 螢幕(如果你只有一個 x-windows 顯示器，:0 就是你正在用的螢幕畫面)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;可執行 &lt;code class=&quot;highlighter-rouge&quot;&gt;x11vnc --help&lt;/code&gt; 可查看所有可用設定參數。&lt;/p&gt;

&lt;p&gt;通常我們會想要系統啟動後便自動執行  vnc  服務，首先設定好開機自動登入圖形介面，然後編輯登入使用者家目錄下的  &lt;code class=&quot;highlighter-rouge&quot;&gt;.config/lxession/LXDE-pi/autostart&lt;/code&gt;，新增一行：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@x11vnc -bg -nevershared -forever -ultrafilexfer -nopw -display :0
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;其中的 &lt;code class=&quot;highlighter-rouge&quot;&gt;-ultrafilexfer&lt;/code&gt; 參數用來支援 ultraVNC viewer 的檔案傳輸功能，如果你用的是 tightVNC，則改為 &lt;code class=&quot;highlighter-rouge&quot;&gt;-tightfilexfer&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;這樣子在啟動使用者桌面環境(LXDE)時，便會自動執行 x11vnc。&lt;/p&gt;
</description>
        <pubDate>Wed, 22 Jun 2016 08:26:27 +0800</pubDate>
        <link>http://robodock.github.io//2016/06/22/raspberry-pi-beaglebone-x11vnc.html</link>
        <guid isPermaLink="true">http://robodock.github.io//2016/06/22/raspberry-pi-beaglebone-x11vnc.html</guid>
        
        
      </item>
    
      <item>
        <title>複製 DHCP 保留位址到其他 DHCP 伺服器上</title>
        <description>&lt;p&gt;在 &lt;strong&gt;Windows AD Domain&lt;/strong&gt; 中，通常也會架設多部之 &lt;strong&gt;DHCP&lt;/strong&gt; 伺服器作為備援，避免單一 DHCP 伺服器失效後，工作站無法取得 IP 位址的問題。然而截至 &lt;strong&gt;Windows Server 2008 R2&lt;/strong&gt; 版本， DHCP 伺服器尚未支援多部 DHCP 伺服器自動同步設定功能，特別是 DHCP 保留位址，必須在每部 DHCP 伺服器上輸入，底下是個變通的方法，可將設定好的 DHCP 保留位址匯出到其他 DHCP 伺服器使用。&lt;/p&gt;

&lt;p&gt;在&lt;strong&gt;來源 DHCP 伺服器&lt;/strong&gt;上，執行下列命令：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;netsh dhcp server &amp;lt;伺服器IP&amp;gt; scope &amp;lt;scope 位址&amp;gt; dump&amp;gt;dump.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;打開 dump.txt 檔，檔案中可找到如下格式之保留設定，複製這些行到新增檔案，將 Server.domain.com 替換為目標伺服器之 IP Address 或 server name。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Dhcp Server \\Server.domain.com Scope 192.168.0.0 Add reservedip 192.168.0.250 &amp;lt;&amp;lt;MAC Address&amp;gt;&amp;gt; &quot;DeviceName.domain.com&quot; &quot;&quot; &quot;BOTH&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;在&lt;strong&gt;目的地 DHCP 伺服器&lt;/strong&gt;上執行下列命令，import 進檔案：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;NETSH exec &amp;lt;&amp;lt;Filename&amp;gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Tue, 31 May 2016 10:03:13 +0800</pubDate>
        <link>http://robodock.github.io//2016/05/31/copy-dhcp-reservations.html</link>
        <guid isPermaLink="true">http://robodock.github.io//2016/05/31/copy-dhcp-reservations.html</guid>
        
        
      </item>
    
      <item>
        <title>Windows 環境快速安裝 Octopress 3</title>
        <description>&lt;p&gt;搭配 Chocolatey 套件管理程式(有關 Chocolatey 的安裝，請看&lt;a href=&quot;http://robodock.github.io/2016/05/25/chocolatey.html&quot;&gt;這篇&lt;/a&gt;)，在 Windows 下安裝 Octopress 3 有了更快速的方法：&lt;/p&gt;

&lt;p&gt;以管理者權限啟動命令列：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ choco install ruby -y
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;安裝完 Ruby 環境後，需以管理者權限重新啟動命令列，相關指令才會生效，接著安裝 jekyll：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ gem install jekyll
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;octopress 3 還需要 redcarpet 與 Ruby DevKit：&lt;/p&gt;

&lt;p&gt;同樣以管理者權限安裝 DevKit&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ choco install ruby2.devkit
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;安裝 Octopress 3&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ gem install octopress
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;接下來關於 octopress 的使用請參考之前&lt;a href=&quot;http://robodock.github.io/2015/08/17/octopress-3-github-pages-blog.html&quot;&gt;這一篇&lt;/a&gt;。&lt;/p&gt;
</description>
        <pubDate>Thu, 26 May 2016 21:57:23 +0800</pubDate>
        <link>http://robodock.github.io//2016/05/26/windows-quick-install-octopress-3.html</link>
        <guid isPermaLink="true">http://robodock.github.io//2016/05/26/windows-quick-install-octopress-3.html</guid>
        
        
      </item>
    
      <item>
        <title>Chocolatey 軟體套件管理</title>
        <description>&lt;h2 id=&quot;chocolatey&quot;&gt;Chocolatey&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Chocolatey&lt;/strong&gt; 是一套 Windows 上的軟體套件管理程式，讓使用者可以用終端機指令的方式進行軟體的自動安裝、升級、移除動作，如同 Debian/Ubuntu 上的 &lt;code class=&quot;highlighter-rouge&quot;&gt;apt-get&lt;/code&gt; 或是 Fedora/RedHat 上的 &lt;code class=&quot;highlighter-rouge&quot;&gt;yum&lt;/code&gt; 一般。&lt;/p&gt;

&lt;h3 id=&quot;chocolatey-1&quot;&gt;安裝 Chocolatey&lt;/h3&gt;

&lt;p&gt;以管理者權限打開命令列模式，輸入底下指令：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@powershell -NoProfile -ExecutionPolicy Bypass -Command &quot;iex ((new-object net.webclient).DownloadString(&#39;https://chocolatey.org/install.ps1&#39;))&quot; &amp;amp;&amp;amp; SET PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;使用 Chocolatey 安裝軟體：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ choco install nodejs 部分套件提供原始安裝版本，套件名稱後方會加上 .install 區分，這類套件可能需要管理者權限，例如：

$ choco install nodejs.install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;升級：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ choco upgrade nodejs
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;移除：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ choco uninstall flashplayer
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;尋找軟體套件：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ choco search docker
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;查看軟體資訊：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ choco info firefox
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;在&lt;a href=&quot;https://chocolatey.org/packages&quot;&gt;官網軟體套件清單&lt;/a&gt;頁面可查詢可安裝套件。&lt;/p&gt;
</description>
        <pubDate>Wed, 25 May 2016 23:48:31 +0800</pubDate>
        <link>http://robodock.github.io//2016/05/25/chocolatey.html</link>
        <guid isPermaLink="true">http://robodock.github.io//2016/05/25/chocolatey.html</guid>
        
        
      </item>
    
      <item>
        <title>CentOS 7 安裝 LNMP server 環境</title>
        <description>&lt;p&gt;&lt;strong&gt;有別於常見的 LAMP (Linux-Apache-MySQL-PHP) 網站伺服器環境，今天要來改用 Nginx 取代 Apache 做為網頁伺服器，這樣的組合成為 LNMP (Linux-Nginx-MySQL-PHP)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;雖然標題寫著 CentOS 7，但在 Debian/Ubuntu 環境下改用對應的 apt-get 套件管理程式，應該也可順利安裝。&lt;/p&gt;

&lt;h2 id=&quot;nginx&quot;&gt;Nginx&lt;/h2&gt;

&lt;p&gt;安裝 Nginx web server，需要用到 epel repository&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ yum update
$ yum install epel-release	\\使用epel repository
$ yum install nginx
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;nginx 的預設網站目錄在 /usr/share/nginx/html，
啟動 nginx web server&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ systemctl start nginx
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;設定開機啟動 nginx server 服務&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ systemctl enable nginx
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;mysql-mariadb&quot;&gt;MySQL (MariaDB)&lt;/h2&gt;

&lt;p&gt;安裝 MySQL 資料庫，因 MySQL 已被 Oracle 收購，為避免閉源風險，CentOS 7 已改用 MySQL 的社群維護版本 Mariadb，基本上指令與程式庫與 MySQL 完全相同。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ yum install mariadb-server mariadb
$ systemctl start mariadb.service    \\先啟動 mysql 資料庫伺服器，注意初始root帳號無密碼
$ mysql_secure_installation          \\互動式的 mysql 起始安全性設定，只要遵照命令列提示，依序進行相關設定與 mysql root 密碼即可
$ systemctl enable mariadb.service	\\設定開機執行 mariadb 服務
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;php-php-fpm&quot;&gt;PHP (php-fpm)&lt;/h2&gt;

&lt;p&gt;安裝 PHP , php-mysql 與搭配 Nginx 時必須的的 php-fpm&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ yum install php php-fpm php-mysql
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;修正一下 php.ini 裡的設定，提高安全性&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ vi /etc/php.ini

找到下列這行 
#cgi.fix_pathinfo = 1
註解拿掉，修改為
cgi.fix_pathinfo = 0
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;接著設定 php-fpm 設定檔&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ vi /etc/php-fpm.d/www.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;可把 FastCGI 請求連接埠修改爲 unix socket&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;預設為：
listen = 127.0.0.1:9000
欲使用 unix socket 方式可改為如下：
listen = /var/run/php-fpm/php-fpm.sock
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;將下列兩行前方的 # 取消&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;listen.owner = nobody
listen.group = nobody
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;再將 user 與 group 皆設定為 CentOS 7 中 Nginx 套件安裝後的預設值&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;user = nginx
group = nginx
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;啟動 php-fpm&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ systemctl start php-fpm
$ systemctl enable php-fpm
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h2 id=&quot;phpmyadmin&quot;&gt;phpMyAdmin&lt;/h2&gt;

&lt;p&gt;安裝管理 MySQL 的 phpMyAdmin&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ yum install phpMyAdmin
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;phpMyAdmin 的預設目錄在 /usr/share/phpMyAdmin, 要讓 nginx 網站伺服器可以使用 phpMyAdmin，可在 nginx 網站根目錄加入 phpMyAdmin 的路徑連結：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd /usr/share/nginx/html
$ ln -s /usr/share/phpMyAdmin
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;另外 /var/lib/php 與 /var/lib/phpMyAdmin 目錄的預設使用者與群組為 apache.apache ，使用 Nginx 須將其使用者與群組設定為 nginx.nginx&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;example&quot;&gt;&lt;em&gt;Example&lt;/em&gt;&lt;/h2&gt;

&lt;p&gt;/etc/nginx/nginx.conf&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    log_format  main  &#39;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#39;
                      &#39;$status $body_bytes_sent &quot;$http_referer&quot; &#39;
                      &#39;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#39;;

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    server {
        listen       80 default_server;
        listen       [::]:80 default_server;
        server_name  localhost;
        root    /usr/share/nginx/html;
        index   index.html index.htm;

        location / {
                try_files $uri $uri/ =404;
        }

        error_page 404 /404.html;

        error_page 500 502 503 504 /50x.html;
            location = /50x.html {
                root /usr/share/nginx/html;
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;要加入虛擬主機，只要在 /etc/nginx/conf.d 目錄中加入主機設定的即可，例如&lt;/p&gt;

&lt;p&gt;/etc/nginx/conf.d/robodock.conf&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;server {
    server_name www.robodock.net;		\\網站名稱
    root /home/robodock/wordpress;	\\網頁根目錄
    index index.html index.php index.htm;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # set expiration of assets to MAX for caching
    location ~* \.(ico|css|js|gif|jpe?g|png|ogg|ogv|svg|svgz|eot|otf|woff)(\?.+)?$ {
        expires max;
        log_not_found off;
    }

    server_tokens off;

    # framework rewrite
    location / {
        try_files $uri $uri/ /index.php;
    }

    location ~ \.php$ {
        fastcgi_pass unix:/var/run/php-fpm/php-fpm.sock;
        fastcgi_index index.php;
        fastcgi_split_path_info ^(.+\.php)(.*)$;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Sat, 21 May 2016 23:28:45 +0800</pubDate>
        <link>http://robodock.github.io//2016/05/21/centos-7-install-lnmp.html</link>
        <guid isPermaLink="true">http://robodock.github.io//2016/05/21/centos-7-install-lnmp.html</guid>
        
        
      </item>
    
      <item>
        <title>OAuth 2.0</title>
        <description>&lt;h2 id=&quot;oauth-&quot;&gt;OAuth 開放授權&lt;/h2&gt;
&lt;p&gt;透過一種 Token 機制，允許使用者讓第三方的應用程式存取該使用者在某一服務網站上儲存的資源(檔案、照片、影片等等)，而不用提供使用者名稱與密碼給第三方應用程式。&lt;/p&gt;

&lt;h2 id=&quot;google-oauth-20-&quot;&gt;Google OAuth 2.0 的運作方式&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;先從 Google Developers Console 取得 OAuth 2.0 client credentials。&lt;/li&gt;
  &lt;li&gt;Client 應用程式向 Google Authorization Server 請求一個 access token，然後將 token 轉送給欲使用的 Google API。&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;在 &lt;code class=&quot;highlighter-rouge&quot;&gt;Google Developers Console&lt;/code&gt; 建立一個新專案&lt;/li&gt;
  &lt;li&gt;在 &lt;code class=&quot;highlighter-rouge&quot;&gt;API 和驗證&lt;/code&gt; 項目下，啟用 &lt;code class=&quot;highlighter-rouge&quot;&gt;Drive API&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;前往 &lt;code class=&quot;highlighter-rouge&quot;&gt;憑證&lt;/code&gt;，選擇 &lt;code class=&quot;highlighter-rouge&quot;&gt;新增憑證&lt;/code&gt;，新增 &lt;code class=&quot;highlighter-rouge&quot;&gt;服務帳戶&lt;/code&gt;，下載憑證 json 檔&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;python--oauth-20&quot;&gt;在 Python 中使用 OAuth 2.0&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;安裝 python 模組 &lt;code class=&quot;highlighter-rouge&quot;&gt;oauth2client&lt;/code&gt;：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; pip install --upgrade oauth2client
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;依系統中未包含 Python OpenSSL 模組時還需安裝：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; pip install PyOpenSSL
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;

    &lt;p&gt;在 Raspberry Pi 上還需要安裝 libciff-dev 套件&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; sudo apt-get install libciff-dev
&lt;/code&gt;&lt;/pre&gt;
    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;python-gspread--google-&quot;&gt;範例：使用 Python gspread 模組存取 Google 試算表&lt;/h3&gt;

&lt;p&gt;先透過 pip 安裝 gspread 模組&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip install gspread
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;程式碼：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;import json
import gspread
from oauth2client.client import SignedJwtAssertionCredentials

json_key = json.load(open(&#39;My Project-xxxxxxxxxxxx.json&#39;))
scope = [&#39;https://spreadsheets.google.com/feeds&#39;]

credentials = SignedJwtAssertionCredentials(json_key[&#39;client_email&#39;], json_key[&#39;private_key&#39;], scope)

gc = gspread.authorize(credentials)

wks = gc.open(&quot;Googld Spread Sheet&quot;).sheet1
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Sat, 21 May 2016 23:15:46 +0800</pubDate>
        <link>http://robodock.github.io//2016/05/21/python-oauth-2-0.html</link>
        <guid isPermaLink="true">http://robodock.github.io//2016/05/21/python-oauth-2-0.html</guid>
        
        
      </item>
    
      <item>
        <title>使用 BeagleBone Black 或 Raspberry Pi 打造簡易的網路 VoIP/Voice Chat 設備 (2/2)</title>
        <description>&lt;h2 id=&quot;python--seren&quot;&gt;使用 Python 來控制 Seren&lt;/h2&gt;

&lt;h3 id=&quot;pybbio-&quot;&gt;安裝 PyBBIO 模組&lt;/h3&gt;

&lt;p&gt;我這邊打算使用 Python 來處理 IO 控制，這樣就可透過按鍵或開關，來控制連線通訊，也可接個燈號顯示來電。&lt;/p&gt;

&lt;p&gt;PyBBIO 模組應可達到我想要的功能。&lt;/p&gt;

&lt;p&gt;先滿足相依性需求：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# apt-get install python-serial python-setuptools python-dev python-smbus python-pip
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;註：目前 PyBBIO 穩定版只支援到 3.8 版 Linux 核心。&lt;/p&gt;

&lt;p&gt;同時需要 Device Tree 編譯器 dtc，若系統中沒有，可至下列位址安裝:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# wget -c https://raw.github.com/RobertCNelson/tools/master/pkgs/dtc.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;上述環境準備好之後，安裝 PyBBIO Python 程式庫模組&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# pip install --upgrade PyBBIO
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;想要自己編譯的，可至下列位址下載:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# git clone git:/github.com/alexanderhiam/PyBBIO.git
# cd PyBBIO
# python setup.py install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;我的 ugly 控制程式如下:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/usr/bin/env python&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;bbio&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;bbio.libraries.EventIO&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;	&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bbio&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;的&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EventIO&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;可建立額外的事件偵測迴圈&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pexpect&lt;/span&gt;		&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;使用&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pexpect&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;來建立子程序呼叫其他程式並與其溝通&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;bbio&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bbio_init&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#指定對應GPIO針腳&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pinAccept&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPIO1_13&lt;/span&gt; 	&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;P8_11&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pinHangup&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPIO1_12&lt;/span&gt; 	&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;P8_12&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pinCall&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPIO1_15&lt;/span&gt;		&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;P8_15&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pinLED&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPIO1_14&lt;/span&gt;    	&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;P8_16&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#設定 GPIO 針腳功能&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pinMode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pinAccept&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INPUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pinMode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pinHangup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INPUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pinMode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pinCall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;INPUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pinMode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pinLED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OUTPUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#建立子行程，呼叫 seren 程式，並給予相關參數&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;child&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pexpect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;spawn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;seren -n Engine -NS -d hw:1,0&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#方便除錯，先將子行程輸出顯示在 stdout&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;child&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;logfile_read&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#定義觸發事件與進行的動作，記得要回傳 EVENT_CONTINUE，事件才可重複觸發&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;accept&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;child&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sendline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;/y&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EVENT_CONTINUE&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hangup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;child&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sendline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;/H&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;digitalWrite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pinLED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LOW&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EVENT_CONTINUE&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;child&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sendline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;/c 192.168.168.114&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EVENT_CONTINUE&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#建立事件偵測迴圈，並加進偵測事件，後方之數值 400 為消除 bounce 的延遲時間&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;event_loop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EventLoop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;event_loop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DigitalTrigger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pinAccept&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HIGH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;accept&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;400&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;event_loop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DigitalTrigger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pinHangup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HIGH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hangup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;400&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;event_loop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;add_event&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DigitalTrigger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pinCall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HIGH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;400&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;event_loop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#透過偵測子行程 seren 的輸出回應，顯示來電燈號，因 expect事件會 blocking 其他行程，這裡指定 timeout 秒數為 1，以持續不斷偵測。&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;child&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;is calling:&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pexpect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TIMEOUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
	    &lt;span class=&quot;c&quot;&gt;#print &#39;\nIncoming Call!&#39;&lt;/span&gt;
	    &lt;span class=&quot;n&quot;&gt;digitalWrite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pinLED&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HIGH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    	&lt;span class=&quot;k&quot;&gt;pass&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

</description>
        <pubDate>Thu, 19 May 2016 22:20:08 +0800</pubDate>
        <link>http://robodock.github.io//2016/05/19/beaglebone-black-seren-voip-2.html</link>
        <guid isPermaLink="true">http://robodock.github.io//2016/05/19/beaglebone-black-seren-voip-2.html</guid>
        
        
      </item>
    
  </channel>
</rss>
